#!/bin/bash

# Execute from the topology directory
cd "$(dirname "$0")/topology"

log_dir=logs/$(date +"%F-%H%M%S")
mkdir -p ../$log_dir

# Log all output of script: https://serverfault.com/a/103569
exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>../$log_dir/vagrant.log 2>&1

# Show log output on command line
#tail -f ../$log_dir/vagrant.log --retry 1>&3 2>/dev/null &
#tail -f ../$log_dir/run.log --retry 1>&3 2>/dev/null &

# Display executed commands 
set -x

# Prevent systemd from using pager (breaks automation)
export SYSTEMD_PAGER=cat

# Make sure we have clean vagrant environment
vagrant destroy
if [ $? -ne 0 ]; then
    # If previous test run didn't end properly in time, kill it
    pkill -9 bin/vagrant
    systemctl restart libvirtd
    vagrant destroy
fi

# Download new vagrant box if needed
../scripts/download-box
if [ $? -ne 0 ]; then
    echo "===== Box download failed =====" 1>&2
    exit 1
fi

# TODO Handle timeout properly and gracefully; attempt retry?
timeout $((15*60)) vagrant up --parallel
if [ $? -ne 0 ]; then
    echo "===== Provisioning timed out =====" 1>&2
    exit 1
fi

# Execute tests
vagrant ssh -c "IPATEST_YAML_CONFIG=/vagrant/topology/ipa-test-config.yaml ipa-run-tests $1 --verbose --logging-level=debug 1>/vagrant/$log_dir/run.log --logfile-dir=/vagrant/$log_dir 2>&1"

vagrant destroy
date

# Stop logging to files
exec 2>&4 1>&3

# Compress the logs to save storage space
find ../$log_dir -type f ! -name '*.gz' -exec gzip "{}" \;

